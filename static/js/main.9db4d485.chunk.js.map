{"version":3,"sources":["StepOne.js","StepTwo.js","StepThree.js","StepFour.js","App.js","index.js"],"names":["StepOne","this","props","data","meal","person","currentStep","className","name","value","onChange","handleChange","type","min","Component","StepTwo","resto","availableRestaurants","arr","unique","forEach","element","includes","restaurant","push","getUnique","dishes","filter","availableMeals","map","key","StepThree","availableDishes","id","totalDishes","item","index","dish","handleRow","quantity","onClick","handleAddDish","StepFour","App","event","target","setState","state","validateStep","formIsValid","goNext","bind","goPrevious","confirmOrder","alert","console","log","removeRow","previousBtn","nextBtn","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9db4d485.chunk.js","sourcesContent":["import React, {Component} from 'react'\n\nclass StepOne extends Component {\n    render() {\n        let {meal, person, currentStep} = this.props.data\n\n        if (currentStep !== 1){\n            return null\n        }\n\n        return (\n            <div className=\"section\">\n                <div className=\"form-group col-md-6 offset-3\">\n                    <label>Select Meal</label>\n                    <select className=\"form-control\" name=\"meal\" value={meal} onChange={this.props.handleChange}>\n                        <option>--Select--</option>\n                        <option value=\"breakfast\">Breakfast</option>\n                        <option value=\"lunch\">Lunch</option>\n                        <option value=\"dinner\">Dinner</option>\n                    </select>\n                </div>\n                <div className=\"form-group col-md-6 offset-3\">\n                    <label>Enter number of people</label>\n                    <input className=\"form-control\" name=\"person\" type=\"number\" min={1} value={person} onChange={this.props.handleChange} />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default StepOne","import React, {Component} from 'react'\nimport dishes from './dishes.json'\n\nclass StepTwo extends Component {\n    render() {\n        let {meal, resto, currentStep} = this.props.data\n\n        if (currentStep !== 2){\n            return null\n        }\n\n        function getUnique(arr) {\n            let unique = []\n\n            arr.forEach(element => {\n                if(!unique.includes(element.restaurant)) {\n                    unique.push(element.restaurant)\n                }\n            });\n\n            return unique\n        }\n\n        let availableRestaurants = getUnique(dishes.dishes.filter(restaurant => restaurant.availableMeals.includes(meal)))\n\n        return (\n            <div className=\"section\">\n                <div className=\"form-group col-md-6 offset-3\">\n                    <label>Select Restaurant</label>\n                    {<select className=\"form-control\" name=\"resto\" value={resto} onChange={this.props.handleChange}>\n                        <option>--Select--</option>\n                        {\n                            availableRestaurants.map((key, value) => <option key={value} value={key}>{key}</option>)\n                        }\n                    </select>}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default StepTwo","import React, {Component} from 'react'\nimport dishes from './dishes'\n\nclass StepThree extends Component {\n    render() {\n        let {meal, resto, currentStep} = this.props.data\n\n        if (currentStep !== 3) {\n            return null\n        }\n\n        let availableDishes = dishes.dishes.filter(restaurant => restaurant.availableMeals.includes(meal) && restaurant.restaurant === resto)\n\n        return (\n            <div className=\"section\">\n                <div className=\"form-group col-md-6 offset-4\">\n                <table id=\"orderTable\">\n                    <thead>\n                        <tr>\n                            <td>Select Dish</td>\n                            <td>Enter Quantity</td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.props.data.totalDishes.map((item, index) => (\n                            <tr key={index}>\n                                <td>\n                                    <select className=\"form-control\" name=\"dish\" id={`select-${index}`} value={this.props.data.totalDishes[index].dish} onChange={this.props.handleRow(index)}>\n                                        <option>--Select--</option>\n                                        {\n                                            availableDishes.map((key) => <option key={key.id} value={key.name}>{key.name}</option>)\n                                        }\n                                    </select>\n                                </td>\n                                <td>\n                                    <input className=\"form-control\" name=\"quantity\" type=\"number\" value={this.props.data.totalDishes[index].quantity} onChange={this.props.handleRow(index)} />\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n                <button className=\"btn btn-success offset-1\" onClick={this.props.handleAddDish}>Add</button>\n            </div>\n            </div>\n        )\n    }\n}\n\nexport default StepThree","import React, {Component} from 'react'\n\nclass StepFour extends Component {\n    render() {\n        let {meal, resto, currentStep, totalDishes, person} = this.props.data\n\n        if (currentStep !== 4) {\n            return null\n        }\n\n        return (\n            <div className=\"section\">\n                <div className=\"form-group col-md-6 offset-3\">\n                <table className=\"table\">\n                    <tbody>\n                        <tr>\n                            <td>Meal: </td>\n                            <td>{meal}</td>\n                        </tr>\n                        <tr>\n                            <td>People: </td>\n                            <td>{person}</td>\n                        </tr>\n                        <tr>\n                            <td>Restaurant: </td>\n                            <td>{resto}</td>\n                        </tr>\n                        <tr>\n                            <td>Dishes: </td>\n                        </tr>\n                    </tbody>\n                </table>\n                <ul className=\"list-group\">\n                    {totalDishes.map((dish, index) => {\n                        return (\n                            <li className=\"list-group-item\" key={index}>{dish.dish + ' - ' + dish.quantity}</li>\n                        )\n                    })}\n                </ul>\n            </div>\n            </div>\n        )\n    }\n}\n\nexport default StepFour","import React, {Component} from 'react'\nimport './App.css'\nimport './bootstrap.min.css'\nimport StepOne from './StepOne'\nimport StepTwo from './StepTwo'\nimport StepThree from './StepThree'\nimport StepFour from \"./StepFour\"\n\nclass App extends Component {\n    constructor(props) {\n        super(props)\n        this.goNext = this.goNext.bind(this)\n        this.goPrevious = this.goPrevious.bind(this)\n        this.confirmOrder = this.confirmOrder.bind(this)\n        this.validateStep = this.validateStep.bind(this)\n\n        this.state = {\n            currentStep: 1,\n            meal: '',\n            person: 1,\n            resto: '',\n            totalDishes: [{\n                dish: \"\",\n                quantity: 1\n            }],\n            formIsValid: false\n        }\n    }\n\n    handleChange = event => {\n        const {name, value} = event.target\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleAddDish = () => {\n        const item = {\n            dish: \"\",\n            quantity: 1\n        }\n\n        this.setState({\n            totalDishes: [...this.state.totalDishes, item]\n        })\n    }\n\n    handleRow = index => event => {\n        const {name, value} = event.target\n        const totalDishes = [...this.state.totalDishes];\n        totalDishes[index][name] = value\n\n        this.setState({\n            totalDishes\n        })\n    }\n\n    get previousBtn() {\n        if (this.state.currentStep !== 1) {\n            return (\n                <button onClick={this.goPrevious} className=\"btn btn-warning\">Previous</button>\n            )\n        }\n\n        return null\n    }\n\n    get nextBtn() {\n        if (this.state.currentStep !== 4) {\n            return (\n                <button onClick={this.goNext} className=\"btn btn-primary next\">Next</button>\n            )\n        } else if (this.state.currentStep === 4) {\n            return (\n                <button onClick={this.confirmOrder} className=\"btn btn-success next\">Confirm Order</button>\n            )\n        }\n\n        return null\n    }\n\n    confirmOrder() {\n        alert('Order confirmed, check your console!')\n        console.log(this.state)\n    }\n\n    goNext() {\n        let currentStep = this.state.currentStep\n\n        this.validateStep(currentStep)\n\n        if (!this.state.formIsValid) {\n            alert('Please enter valid data')\n            return\n        }\n\n        this.state.formIsValid = false\n\n        currentStep = currentStep >= 4 ? 4 : currentStep + 1\n\n        this.setState({\n            currentStep: currentStep\n        })\n    }\n\n    validateStep = (currentStep) => {\n        switch (currentStep) {\n            case 1:\n                if(this.state.meal) this.state.formIsValid = true\n                break\n            case 2:\n                if (this.state.resto) this.state.formIsValid = true\n                break\n            case 3:\n                if (this.state.totalDishes[0].dish) this.state.formIsValid = true\n                break\n        }\n    }\n\n    goPrevious() {\n        let currentStep = this.state.currentStep\n        currentStep = currentStep <= 1 ? 1 : currentStep - 1\n\n        this.setState({\n            currentStep: currentStep\n        })\n\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <b>Swaggy</b>, order food from your favourite restro!\n                </header>\n                <label>Step {this.state.currentStep}/4</label>\n                <StepOne data={this.state} handleChange={this.handleChange}/>\n                <StepTwo data={this.state} handleChange={this.handleChange}/>\n                <StepThree data={this.state} handleAddDish={this.handleAddDish} handleRow={this.handleRow} removeRow={this.removeRow}/>\n                <StepFour data={this.state}/>\n                {this.previousBtn}\n                {this.nextBtn}\n            </div>\n        )\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}