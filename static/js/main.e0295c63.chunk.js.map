{"version":3,"sources":["StepOne.js","StepTwo.js","StepThree.js","StepFour.js","App.js","index.js"],"names":["StepOne","this","props","data","meal","person","currentStep","className","name","value","onChange","handleChange","type","Component","StepTwo","resto","availableRestaurants","arr","unique","forEach","element","includes","restaurant","push","getUnique","dishes","filter","availableMeals","map","key","StepThree","availableDishes","id","totalDishes","item","index","dish","handleRow","quantity","onClick","handleAddDish","StepFour","App","event","target","setState","state","goNext","bind","goPrevious","confirmOrder","alert","console","log","removeRow","previousBtn","nextBtn","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e0295c63.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\n\r\nclass StepOne extends Component {\r\n    render() {\r\n        let {meal, person, currentStep} = this.props.data\r\n\r\n        if (currentStep !== 1){\r\n            return null\r\n        }\r\n\r\n        return (\r\n            <div className=\"section\">\r\n                <div className=\"form-group col-md-6 offset-3\">\r\n                    <label>Select Meal</label>\r\n                    <select className=\"form-control\" name=\"meal\" value={meal} onChange={this.props.handleChange}>\r\n                        <option>--Select--</option>\r\n                        <option value=\"breakfast\">Breakfast</option>\r\n                        <option value=\"lunch\">Lunch</option>\r\n                        <option value=\"dinner\">Dinner</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group col-md-6 offset-3\">\r\n                    <label>Enter number of people</label>\r\n                    <input className=\"form-control\" name=\"person\" type=\"number\" value={person} onChange={this.props.handleChange} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StepOne","import React, {Component} from 'react'\nimport dishes from './dishes.json'\n\nclass StepTwo extends Component {\n    render() {\n        let {meal, resto, currentStep} = this.props.data\n\n        if (currentStep !== 2){\n            return null\n        }\n\n        function getUnique(arr) {\n            let unique = []\n\n            arr.forEach(element => {\n                if(!unique.includes(element.restaurant)) {\n                    unique.push(element.restaurant)\n                }\n            });\n\n            return unique\n        }\n\n        let availableRestaurants = getUnique(dishes.dishes.filter(restaurant => restaurant.availableMeals.includes(meal)))\n\n        return (\n            <div className=\"section\">\n                <div className=\"form-group col-md-6 offset-3\">\n                    <label>Select Restaurant</label>\n                    {<select className=\"form-control\" name=\"resto\" value={resto} onChange={this.props.handleChange}>\n                        <option>--Select--</option>\n                        {\n                            availableRestaurants.map((key, value) => <option key={value} value={key}>{key}</option>)\n                        }\n                    </select>}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default StepTwo","import React, {Component} from 'react'\nimport dishes from './dishes'\n\nclass StepThree extends Component {\n    render() {\n        let {meal, resto, currentStep} = this.props.data\n\n        if (currentStep !== 3) {\n            return null\n        }\n\n        let availableDishes = dishes.dishes.filter(restaurant => restaurant.availableMeals.includes(meal) && restaurant.restaurant === resto)\n\n        return (\n            <div className=\"section\">\n                <div className=\"form-group col-md-6 offset-4\">\n                <table id=\"orderTable\">\n                    <thead>\n                        <tr>\n                            <td>Select Dish</td>\n                            <td>Enter Quantity</td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.props.data.totalDishes.map((item, index) => (\n                            <tr key={index}>\n                                <td>\n                                    <select className=\"form-control\" name=\"dish\" id={`select-${index}`} value={this.props.data.totalDishes[index].dish} onChange={this.props.handleRow(index)}>\n                                        <option>--Select--</option>\n                                        {\n                                            availableDishes.map((key) => <option key={key.id} value={key.name}>{key.name}</option>)\n                                        }\n                                    </select>\n                                </td>\n                                <td>\n                                    <input className=\"form-control\" name=\"quantity\" type=\"number\" value={this.props.data.totalDishes[index].quantity} onChange={this.props.handleRow(index)} />\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n                <button className=\"btn btn-success offset-1\" onClick={this.props.handleAddDish}>Add</button>\n            </div>\n            </div>\n        )\n    }\n}\n\nexport default StepThree","import React, {Component} from 'react'\n\nclass StepFour extends Component {\n    render() {\n        let {meal, resto, currentStep, totalDishes, person} = this.props.data\n\n        if (currentStep !== 4) {\n            return null\n        }\n\n        return (\n            <div className=\"section\">\n                <div className=\"form-group col-md-6 offset-3\">\n                <table className=\"table\">\n                    <tbody>\n                        <tr>\n                            <td>Meal: </td>\n                            <td>{meal}</td>\n                        </tr>\n                        <tr>\n                            <td>People: </td>\n                            <td>{person}</td>\n                        </tr>\n                        <tr>\n                            <td>Restaurant: </td>\n                            <td>{resto}</td>\n                        </tr>\n                        <tr>\n                            <td>Dishes: </td>\n                        </tr>\n                    </tbody>\n                </table>\n                <ul className=\"list-group\">\n                    {totalDishes.map((dish, index) => {\n                        return (\n                            <li className=\"list-group-item\" key={index}>{dish.dish + ' - ' + dish.quantity}</li>\n                        )\n                    })}\n                </ul>\n            </div>\n            </div>\n        )\n    }\n}\n\nexport default StepFour","import React, {Component} from 'react'\nimport './App.css'\nimport './bootstrap.min.css'\nimport StepOne from './StepOne'\nimport StepTwo from './StepTwo'\nimport StepThree from './StepThree'\nimport StepFour from \"./StepFour\"\n\nclass App extends Component {\n    constructor(props) {\n        super(props)\n        this.goNext = this.goNext.bind(this)\n        this.goPrevious = this.goPrevious.bind(this)\n        this.confirmOrder = this.confirmOrder.bind(this)\n\n        this.state = {\n            currentStep: 1,\n            meal: '',\n            person: 1,\n            resto: '',\n            totalDishes: [{\n                dish: \"\",\n                quantity: 1\n            }],\n        }\n    }\n\n    handleChange = event => {\n        const {name, value} = event.target\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleAddDish = () => {\n        const item = {\n            dish: \"\",\n            quantity: 1\n        }\n\n        this.setState({\n            totalDishes: [...this.state.totalDishes, item]\n        })\n    }\n\n    handleRow = index => event => {\n        const {name, value} = event.target\n        const totalDishes = [...this.state.totalDishes];\n        totalDishes[index][name] = value\n\n        this.setState({\n            totalDishes\n        })\n    }\n\n    get previousBtn() {\n        if (this.state.currentStep !== 1) {\n            return (\n                <button onClick={this.goPrevious} className=\"btn btn-warning\">Previous</button>\n            )\n        }\n\n        return null\n    }\n\n    get nextBtn() {\n        if (this.state.currentStep !== 4) {\n            return (\n                <button onClick={this.goNext} className=\"btn btn-primary next\">Next</button>\n            )\n        } else if (this.state.currentStep === 4) {\n            return (\n                <button onClick={this.confirmOrder} className=\"btn btn-success next\">Confirm Order</button>\n            )\n        }\n\n        return null\n    }\n\n    confirmOrder() {\n        alert('Order confirmed, check your console!')\n        console.log(this.state)\n    }\n\n    goNext() {\n        let currentStep = this.state.currentStep\n\n        currentStep = currentStep >= 4 ? 4 : currentStep + 1\n\n        this.setState({\n            currentStep: currentStep\n        })\n    }\n\n    goPrevious() {\n        let currentStep = this.state.currentStep\n        currentStep = currentStep <= 1 ? 1 : currentStep - 1\n\n        this.setState({\n            currentStep: currentStep\n        })\n\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    Order from your favourite restro\n                </header>\n                <label>Step {this.state.currentStep}/4</label>\n                <StepOne data={this.state} handleChange={this.handleChange}/>\n                <StepTwo data={this.state} handleChange={this.handleChange}/>\n                <StepThree data={this.state} handleAddDish={this.handleAddDish} handleRow={this.handleRow} removeRow={this.removeRow}/>\n                <StepFour data={this.state}/>\n                {this.previousBtn}\n                {this.nextBtn}\n            </div>\n        )\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}